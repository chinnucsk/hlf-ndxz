//
// The Screen Layout Stylesheet
// ============================
//
// Reserved indexhibit selectors:
//
// - .container
// - #content
// - #menu
// - #menu .section
// - #once

// Constants
// =========

$_text-height: 16px;
$_line-height: 24px;
$_box-gutter: $_text-height;
$_list-gutter: 7px;
$_node-gutter: 10px;
$_true-box-width: 600px;
$_box-width: 600px;
$_menu-width: 256px;

// Base
// ====

// Add context-dependent base boilerplate.
$_context: layout_screen;
@import "../scss/bootstrap.scss";

// Box
// ---

.box {
  display: block;
  ul, li { margin: 0; list-style:none; list-style-image: none; } // Reset.
  .hd, .bd, .ft {
    padding: $_box-gutter;
    position: relative;
  }
  .hd, .bd {
    padding-bottom: 0;
  }
}

// Menu
// ----

@import "../scss/menu.scss";

.mn-v-a { @extend .mn-v; }

.as {
  display: block;
  position: absolute;
  right: 0;
  .hd & {
    top: 0;
    right: 1em;
  }
}
.has-as {
  position: relative;
}

// Grid
// ----

@import "../scss/grid.scss";

#html .in-g { border-width: 0; }

/* -------------------------------------------------- */
/* NON-REUSABLE, CUSTOM CODE AFTER THIS POINT         */
/* -------------------------------------------------- */

// App
// ===

// Nav
// ---

#menu {

  $gutter: $_box-gutter;
  .box {
    .in { padding: { top: $gutter; right: 0.5*$gutter; bottom: $gutter; } }
    &#hd {
      padding-bottom: $gutter;
      .in { padding: 0; }
    }
  }
  #ft { padding-top: $gutter; }
  p { padding-bottom: 0; }
  .container { padding: { bottom: $gutter; right: $gutter; } }
  #navigation {
    .mn-v { padding-bottom: 1.5*$gutter; }
  }

}

// Wraps
// -----

#content {

  @extend %clearfix;

  // Boxes. Yay.
  .box {
    $v-gutter: 1.5*$_box-gutter;
    .in {
      width: $_box-width - 2px;
      margin-bottom: $_box-gutter;
    }
    .hd {
      padding-top: $v-gutter;
      .has-as .as { padding-top: 3px; }
    }
    .bd {
      padding-bottom: $v-gutter;
    }
    dl.bd { padding-bottom: 0.5*$_box-gutter; }
    li {
      padding-bottom: $_list-gutter;
    }
    .mn-v-a {
      li { padding-bottom: 0; }
      a { padding-bottom: $_list-gutter; }
    }
  }

  // Labeled list.
  dt, dd {
    display: block;
  }
  dt {
    margin: { top: $_node-gutter/2; bottom: $_node-gutter/2; }
    small {
      padding-left: 1em;
    }
  }
  dd {
    padding-bottom: $_node-gutter;
  }

  // Hash list.
  .rows {
    dd, dt { vertical-align: middle; }
    dt {
      float: left;
      padding-right: 1em;
      margin: 0;
    }
    dd {
      display: block;
      clear: right;
    }
  }

  // Feeds.
  .feeds-container {
    padding: { left: 0; right: 0; }
    header {
      padding: { left: $_box-gutter; right: $_box-gutter; }
    }
    .label {
      display: block;
    }
  }
  .feed-container {
    &.posterous-feed li,
    &.twitter-feed li {
      padding-right: $_box-gutter + 1px;
    }
    &.posterous-feed .mn-v a.permalink {
      // TODO - truncated text.
      padding-right: 0;
      overflow: hidden;
      white-space: nowrap;
    }
    &.github-feed .mn-v article,
    &.twitter-feed .mn-v article {
      padding: .545em 0 .181em 1.545em;
    }
    &.github-feed .mn-v {
      blockquote, code { font-style: italic; }
    }
  }
  .feed {
    &.mn-v {
      .inline {
        border: 0;
        padding: 0;
        margin: 0;
      }
      li {
        padding: 0;
        border-bottom-width: 1px;
        li {
          border: 0;
        }
      }
      a.permalink {
        padding-top: .545em;
        padding-bottom: .181em;
        padding-left: .545em;
        border-width: 0 0 0 1em;
      }
    }
    &.mn-g {
      @extend .mn;
      // TODO - image grid mixin
      li {
        float: left;
        width: 33%;
        display: block;
      }
      figure {
        height: 170px;
        padding: 10px 0;
        img {
          display: block;
          margin: 0 auto;
          box-shadow: 0 0 3px rgba(0,0,0, .5); -moz-box-shadow: 0 0 3px rgba(0,0,0, .5); -webkit-box-shadow: 0 0 3px rgba(0,0,0, .5);
        }
      }
      figcaption {
        display: block;
        text-align: center;
        padding: 10px 0 0 0;
      }
    }
  }
  .js-feed-remember {
    right: 100px;
  }

  // Alternative to headers.
  header .label,
  li.label {
    margin: { top: $_node-gutter/2; bottom: $_node-gutter/2; }
    padding-bottom: 0;
  }

  // Content.
  p {
    width: $_box-width - 2*($_box-gutter + 1px);
    padding: $_box-gutter; /* 16px */
    margin-bottom: $_box-gutter;
  }
  #img-container p.scroll-item span {
    display: block;
    padding: $_box-gutter;
  }
  #img-container p.scroll-item,
  p.embed {
    padding: 0; line-height: 0; // Reset.
    width: $_true-box-width;
  }

}

// Misc
// ----

#hcard-contact {
  #{$_weight} & {
    padding-bottom: $_line-height;
  }
  dt {
    width: 1.5em;
    &.r2 {
      padding-bottom: $_box-gutter;
    }
  }
  dd { padding-bottom: 0; }
}

// JavaScript
// ----------

.slideshow-plugin {
  $width: $_true-box-width;
  #{$_weight} & {
    $gutter: $_box-gutter;
    p.meta {
      text-align: left;
      margin-top: $gutter;
      margin-bottom: $gutter;
      padding: $gutter;
      width: $width - 2*($_box-gutter + 1px); // Account for borders.
    }
  }
  .img-bot {
    margin-bottom: 0;
  }
  .slide {
    min-width: $width;
    text-align: center;
  }
  .meta span {
    display: block;
  }
}

// Base Extensions
// ---------------

.mn-v {
  #html & {
    .section-title {
      display: block;
      padding: { top: 1.5*$_box-gutter; bottom: 0.5*$_box-gutter; }
      border-width: 0;
    }
  }
  #navigation & {
    li {
      border-bottom-width: 1px;
      &.section-title {
        position: relative;
        padding-left: $_box-gutter;
        .js-fold-trigger {
          $gutter: $_box-gutter;
          $size: 1.5*$gutter;
          position: absolute;
          right: $gutter; bottom: 0.25*$gutter;
          text-align: center; line-height: $size - 2px; width: $size; height: $size;
          padding: 0;
          border-width: 1px;
        }
      }
      a { border-left-width: 1em; }
    }
    a {
      border-width: 0;
      padding: { top: 0.5*$_node-gutter + 1px; bottom: 2px; left: 0.5*$_node-gutter; }
    }
  }
}

.box {
  #menu & {
    .in { padding-left: $_box-gutter; }
  }
}

.mn-v-a {
  #content & {
    a {
      @extend .inline-block;
      width: 100%;
    }
  }
}

// Indexhibit Default
// ------------------

#once {
  clear: left;
}
#content {
  height: 100%;
  margin: 0;
  margin-left: $_menu-width;
  top: 0;
}
#menu {
  width: $_menu-width;
  top: 0;
  bottom: 0;
  left: 0;
  position: fixed;
  height: 100%;
}
#content .container .cl {
  display: none;
}
